name: Continuous Integration

on: [push, pull_request]

jobs:
  continuous-integration:
    runs-on: ubuntu-latest

    services:
      postgresql:
        image: bitnami/postgresql
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U docker"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        env:
          RABBITMQ_DEFAULT_USER: ${{ secrets.RABBITMQ_USER }}
          RABBITMQ_DEFAULT_PASS: ${{ secrets.RABBITMQ_PASSWORD }}
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmq-diagnostics -q check_running"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      RABBITMQ_URL: ${{ secrets.RABBITMQ_URL }}
      RABBITMQ_USER: ${{ secrets.RABBITMQ_USER }}
      RABBITMQ_PASSWORD: ${{ secrets.RABBITMQ_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 23.x

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.x

      - name: Install dependencies
        run: pnpm install

      - name: Run migrations
        run: pnpm migrate:push

      - name: Run build and test
        run: |
          pnpm build
          pnpm test
